{"version":3,"sources":["UnityVisualizer/UnityVisualiser.tsx","MainComponent/MainComponent.tsx","Switch/Switch.tsx","usefullStuff.ts","MainComponent/Table.tsx","MainComponent/SetData.tsx","MainComponent/WatchData.tsx","Graph/Graph.tsx","App/App.tsx","index.tsx"],"names":["CameraModes","cerateUnityFunction","unityContent","gameObjectName","methodName","parameter","send","Modes","useContext","context","originalHeight","canSatPosition","flightProperties","last","useMemo","UnityContent","on","console","log","setMode","useCallback","setOriginalHeightUnity","moveCanSat","useEffect","JSON","stringify","className","id","onClick","Orbit","Side","Top","Switch","switchHeight","ballHeight","onChange","animationDuration","checkedColor","defaultChecked","switchId","Math","random","toString","substr","type","getPosition","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","getWeather","latitude","longitude","a","fetch","resp","json","error","Table","data","map","index","rowName","value","renderCondition","unit","undefined","key","OrangeSwitch","SetData","setOriginalHeight","automaticLocalisation","setAutomaticLocalisation","automaticWind","setAutomaticWind","originalLongitude","setOriginalLongitude","originalLatitude","setOriginalLatitude","windSpeed","setWindSpeed","windAzimuth","setWindAzimuth","canSatMass","setCanSatMass","airCS","setAirCS","canSatSurfaceArea","setCanSatSurfaceArea","setIsPaused","setLocalisation","position","coords","handleStart","weather","wind_speed","wind_direction","startSimulation","WatchData","e","parseFloat","target","step","href","rel","checked","isPaused","setFlightProperties","velocity","pressure","time","degPerMeter","PI","handleCancel","pauseSimulation","ReducerActions","reset","currentLongitude","x","currentLatitude","z","toFixed","y","resumeSimulation","Properties","component","useState","mode","pickProperties","ch","p","canSatPositionX","canSatPositionY","canSatPositionZ","velocityX","velocityY","velocityZ","SelectProperty","Object","keys","propName","propVal","width","height","plotSize","setPlotSize","GraphDiv","useRef","resizeGraph","current","getBoundingClientRect","window","addEventListener","removeEventListener","axisXProperty","setAxisXProperty","axisYProperty","setAxisYProperty","chunk","ref","stroke","createContext","automaticPressure","setAutomaticPressure","defaultFlightProperties","useReducer","state","action","contextValues","Provider","UnityVisualiser","Array","prototype","this","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55c4dcba.chunk.js","sourcesContent":["import \"./UnityVisualizer.scss\"\r\nimport React, { useCallback, useContext, useEffect, useMemo } from \"react\"\r\nimport Unity, { UnityContent } from \"react-unity-webgl\"\r\nimport { context } from \"../App/App\"\r\n\r\nexport function cerateUnityFunction <paramType> (unityContent: UnityContent, gameObjectName: string, methodName: string) {\r\n    return function (parameter: paramType) {\r\n        unityContent.send(gameObjectName, methodName, parameter)\r\n    }\r\n}\r\n\r\nenum CameraModes {\r\n    Orbit,\r\n    Top,\r\n    Side\r\n}\r\n\r\nexport default () => {\r\n    const {originalHeight, flightProperties} = useContext(context)\r\n    const {canSatPosition} = flightProperties.last()\r\n    const unityContent = useMemo(() => new UnityContent(\"unity/Build/unity.json\", \"unity/Build/UnityLoader.js\"), [])\r\n    unityContent.on(\"sceneLoaded\", () => console.log(\"jdbbskf\"))\r\n    \r\n    const setMode = useCallback( cerateUnityFunction <CameraModes> (unityContent, \"Main Camera\", \"setMode\"), [unityContent] )    \r\n    const setOriginalHeightUnity = useCallback( cerateUnityFunction <number> (unityContent, \"Main Camera\", \"setOriginalHeight\"), [unityContent] )\r\n    const moveCanSat = useCallback( cerateUnityFunction <string> (unityContent, \"Sphere\", \"moveCanSat\"), [unityContent] )\r\n    \r\n    useEffect(() => setOriginalHeightUnity(originalHeight + 1), [originalHeight])    \r\n    useEffect(() => moveCanSat(JSON.stringify(canSatPosition)), [canSatPosition])    \r\n\r\n    return(\r\n        <div className=\"UnityVisualiser\">            \r\n            <div id=\"onCanvas\">\r\n                <button onClick={() => setMode(CameraModes.Orbit) }> Orbit </button>\r\n                <button onClick={() => setMode(CameraModes.Side) }> Side </button>\r\n                <button onClick={() => setMode(CameraModes.Top) }> Top </button> \r\n            </div>\r\n            <Unity unityContent={unityContent} className=\"viewport\"/>     \r\n        </div>\r\n    )\r\n}","import \"./MainComponent.scss\"\r\nimport React, { useState } from 'react'\r\nimport { SetData } from './SetData'\r\nimport { WatchData } from './WatchData'\r\n\r\nexport enum Modes {\r\n    SetData,\r\n    WatchData\r\n}\r\n\r\nexport default () => {\r\n    const [mode, setMode] = useState(Modes.SetData)\r\n    let component: JSX.Element\r\n\r\n    switch (mode) {\r\n        case Modes.SetData:\r\n            component = <SetData setMode={setMode} />\r\n            break\r\n        case Modes.WatchData:\r\n            component = <WatchData setMode={setMode} />\r\n            break\r\n        default:\r\n            component = <h1> MainComponent error </h1>\r\n            break\r\n    }\r\n\r\n    return(\r\n        <div className=\"MainComponent\">\r\n            { component }\r\n        </div>\r\n    )\r\n}","import \"./Switch.scss\"\r\nimport React, { useMemo } from 'react'\r\n\r\ninterface props {\r\n    switchHeight: string | number,\r\n    ballHeight: string | number,\r\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    animationDuration: string,\r\n    checkedColor: string,\r\n    defaultChecked?: boolean\r\n}\r\n\r\nconst ID = () => Math.random().toString(36).substr(2, 9)\r\n\r\nexport const Switch: React.FC<props> = ({switchHeight, ballHeight, onChange, animationDuration, checkedColor, defaultChecked}) => {\r\n    const switchId = useMemo(() => `Switch-${ID()}`, [])\r\n    return(\r\n        <>\r\n            <style>{\r\n                `#${switchId} {\r\n                    --switch-height: ${switchHeight};\r\n                    --ball-height: ${ballHeight};\r\n                    --ball-gap: calc( (var(--switch-height) - var(--ball-height)) / 2);\r\n                    --animation-duration: ${animationDuration};\r\n                    --checked-color: ${checkedColor}\r\n                }`\r\n            }</style>\r\n            \r\n            <input\r\n                className='Switch'\r\n                type='checkbox'\r\n                id={switchId}\r\n                onChange={onChange}\r\n                defaultChecked={defaultChecked}    \r\n            />\r\n        </>\r\n    )\r\n}","export interface Vector {\r\n    x: number,\r\n    y: number,\r\n    z: number\r\n}\r\n\r\nexport const getPosition = () => new Promise<Position>((resolve, reject) => {\r\n    navigator.geolocation.getCurrentPosition(resolve, reject);\r\n})\r\n\r\ninterface weatherResp {\r\n    baro_pressure: {\r\n        units: string,\r\n        value: number\r\n    },\r\n    wind_direction: {\r\n        units: string,\r\n        value: number\r\n    },\r\n    wind_speed: {\r\n        units: string,\r\n        value: number\r\n    }\r\n}\r\n\r\nexport const getWeather = async (latitude: number, longitude: number): Promise<weatherResp> => {\r\n    try {\r\n        const resp = await fetch(`https://climacell-microweather-v1.p.rapidapi.com/weather/realtime?unit_system=si&fields=wind_speed,wind_direction,baro_pressure&lat=${latitude}&lon=${longitude}`, {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"climacell-microweather-v1.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"2d1f8c67f6msh9352c048b60f48ap1bd0b5jsn06b13115e239\"\r\n            }\r\n        })\r\n        return resp.json()\r\n    }\r\n    catch(error) {\r\n        console.error(error)\r\n    }\r\n}\r\n    \r\n\r\n","import \"./Table.scss\"\r\nimport React from \"react\"\r\n\r\nexport interface TableEntry {\r\n    rowName: any,\r\n    value: any,\r\n    renderCondition?: boolean,\r\n    unit?: any \r\n}\r\n\r\ninterface props {\r\n    data: TableEntry[]\r\n}\r\n\r\nexport const Table: React.FC<props> = ({data}) => (\r\n    <table className=\"Table\">\r\n        {\r\n            data.map( ({rowName, value, renderCondition, unit}, index) => {\r\n                if(renderCondition === undefined || renderCondition === true){\r\n                    return(\r\n                        <tbody key={index}>\r\n                            <tr>\r\n                                <th> { rowName } </th>\r\n                                <th> { value }{ unit } </th>\r\n                            </tr>\r\n                        </tbody>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n    </table>\r\n)","import React, { useContext, useEffect } from 'react'\r\nimport { startSimulation } from '..'\r\nimport { Switch } from '../Switch/Switch'\r\nimport { context } from '../App/App'\r\nimport { getPosition, getWeather } from '../usefullStuff'\r\nimport { Modes } from './MainComponent'\r\nimport { Table, TableEntry } from './Table'\r\n\r\ninterface OrangeSwitchProps {\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n}\r\n\r\nconst OrangeSwitch: React.FC<OrangeSwitchProps> = ({onChange}) => (\r\n    <Switch\r\n        switchHeight=\"15px\"\r\n        ballHeight=\"12px\"\r\n        animationDuration=\"0.25s\"\r\n        checkedColor=\"#fab132\"\r\n        onChange={onChange}\r\n        defaultChecked={true}\r\n    />\r\n)\r\n\r\ninterface props {\r\n    setMode: React.Dispatch<React.SetStateAction<Modes>>\r\n}\r\n\r\nexport const SetData: React.FC<props> = ({setMode}) => {    \r\n    const {\r\n        originalHeight,\r\n        setOriginalHeight,\r\n        automaticLocalisation,\r\n        setAutomaticLocalisation,\r\n        automaticWind,\r\n        setAutomaticWind,\r\n        originalLongitude,\r\n        setOriginalLongitude,\r\n        originalLatitude,\r\n        setOriginalLatitude,\r\n        windSpeed,\r\n        setWindSpeed,\r\n        windAzimuth,\r\n        setWindAzimuth,\r\n        canSatMass,\r\n        setCanSatMass,\r\n        airCS, \r\n        setAirCS,\r\n        canSatSurfaceArea,\r\n        setCanSatSurfaceArea,\r\n        setIsPaused\r\n    } = useContext(context)\r\n\r\n    const setLocalisation = async (): Promise<void> => {\r\n        try {\r\n            if(automaticLocalisation) {\r\n                const position = await getPosition()\r\n                const {latitude, longitude} = position.coords\r\n                setOriginalLatitude(latitude)\r\n                setOriginalLongitude(longitude)\r\n            }            \r\n        }\r\n        catch(error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {setLocalisation()}, [])\r\n\r\n    const handleAutomaticLocalisationChange = (e: React.ChangeEvent<HTMLInputElement>): void => {        \r\n        setAutomaticLocalisation(e.target.checked)        \r\n        setLocalisation()\r\n    }\r\n\r\n    const handleStart = async (): Promise<void> => {\r\n        try {        \r\n            if(automaticLocalisation) {\r\n                const position = await getPosition()\r\n                const {latitude, longitude} = position.coords\r\n                setOriginalLatitude(latitude)\r\n                setOriginalLongitude(longitude)\r\n            }\r\n            const weather = await getWeather(originalLatitude, originalLongitude)\r\n            automaticWind && setWindSpeed(weather.wind_speed.value)\r\n            automaticWind && setWindAzimuth(weather.wind_direction.value)\r\n            setIsPaused(false)\r\n            startSimulation()\r\n            setMode(Modes.WatchData)\r\n        }\r\n        catch(error) {\r\n            console.error(error)\r\n        }\r\n    }\r\n\r\n    const data: Array<TableEntry> = [\r\n        {\r\n            rowName: \"Original height\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={originalHeight}\r\n                onChange={e => setOriginalHeight(parseFloat(e.target.value))}\r\n            />,\r\n            unit: \"m\"\r\n        },\r\n        {\r\n            rowName: \"CanSat mass\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={canSatMass}\r\n                onChange={e => setCanSatMass(parseFloat(e.target.value))}\r\n                step=\"0.01\"\r\n            />,\r\n            unit: \"kg\"\r\n        },\r\n        {\r\n            rowName: \"Satellite side surface\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={canSatSurfaceArea}\r\n                onChange={e => setCanSatSurfaceArea(parseFloat(e.target.value))}\r\n                step=\"0.01\"\r\n            />,\r\n            unit: <>m<sup>2</sup></>\r\n        },\r\n        {\r\n            rowName: <>\r\n                C * S parameter of air\r\n                <a\r\n                    href=\"https://cnx.org/contents/TqqPA4io@2.43:olSre6jy@4/6-4-Si%C5%82a-oporu-i-pr%C4%99dko%C5%9B%C4%87-graniczna\"\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                > ? </a>\r\n            </>,\r\n            value: <input\r\n                type=\"number\"\r\n                value={airCS}\r\n                onChange={e => setAirCS(parseFloat(e.target.value))}\r\n                step=\"0.01\"\r\n            />\r\n        },\r\n        {\r\n            rowName: \"Automatic localisation\",\r\n            value: <OrangeSwitch onChange={handleAutomaticLocalisationChange} />,\r\n        },\r\n        {\r\n            rowName: \"Latitude\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={originalLatitude}\r\n                onChange={e => setOriginalLatitude(parseFloat(e.target.value))}\r\n            />,\r\n            renderCondition: !automaticLocalisation\r\n        },\r\n        {\r\n            rowName: \"Longitude\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={originalLongitude}\r\n                onChange={e => setOriginalLongitude(parseFloat(e.target.value))}\r\n            />,\r\n            renderCondition: !automaticLocalisation\r\n        },\r\n        {\r\n            rowName: \"Automatyczny wiatr\",\r\n            value: <OrangeSwitch onChange={e => setAutomaticWind(e.target.checked)} />,\r\n        },\r\n        {\r\n            rowName: \"Wind speed\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={windSpeed}\r\n                onChange={e => setWindSpeed(parseFloat(e.target.value))}\r\n            />,\r\n            unit: \"m/s\",\r\n            renderCondition: !automaticWind\r\n        },\r\n        {\r\n            rowName: \"Wind azimuth\",\r\n            value: <input\r\n                type=\"number\"\r\n                value={windAzimuth}\r\n                onChange={e => setWindAzimuth(parseFloat(e.target.value))}\r\n            />,\r\n            unit: <> &#176; </>,\r\n            renderCondition: !automaticWind\r\n        }        \r\n    ]\r\n\r\n    return (\r\n        <div className=\"SetData\">\r\n            <Table data={data} />                                                                                             \r\n            <button onClick={handleStart}>\r\n                Start\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useMemo } from \"react\"\r\nimport { pauseSimulation, resumeSimulation } from \"..\"\r\nimport { context, ReducerActions } from \"../App/App\"\r\nimport { Modes } from \"./MainComponent\"\r\nimport { Table, TableEntry } from \"./Table\"\r\n\r\ninterface props {\r\n    setMode: React.Dispatch<React.SetStateAction<Modes>>\r\n}\r\n\r\nexport const WatchData: React.FC<props> = ({setMode}) => {    \r\n    const {\r\n        isPaused,\r\n        windAzimuth,\r\n        windSpeed,\r\n        originalLatitude,\r\n        originalLongitude,\r\n        flightProperties,\r\n        setFlightProperties\r\n    } = useContext(context)    \r\n\r\n    const {canSatPosition, velocity, pressure, time} = flightProperties.last()\r\n\r\n    const degPerMeter = useMemo(() => {\r\n        const earthRadius = 6371e3\r\n        const earthCircumference = Math.PI * 2 * earthRadius\r\n        return 360 / earthCircumference\r\n    }, [])\r\n\r\n    const handleCancel = async () => {\r\n        await pauseSimulation()\r\n        setFlightProperties(ReducerActions.reset)\r\n        setMode(Modes.SetData)\r\n    }\r\n\r\n    const currentLongitude = originalLongitude + canSatPosition.x * degPerMeter\r\n    const currentLatitude = originalLatitude + canSatPosition.z * degPerMeter    \r\n\r\n    const data: Array<TableEntry> = [\r\n        {\r\n            rowName: \"Position x\",\r\n            value: canSatPosition.x.toFixed(2)\r\n        },\r\n        {\r\n            rowName: \"Position z\",\r\n            value: canSatPosition.z.toFixed(2)\r\n        },\r\n        {\r\n            rowName: \"Longitude\",\r\n            value: currentLongitude.toFixed(5)\r\n        },\r\n        {\r\n            rowName: \"Latitude\",\r\n            value: currentLatitude.toFixed(5)\r\n        },\r\n        {\r\n            rowName: \"Falling velocity\",\r\n            value: (velocity.y * -1).toFixed(1),\r\n            unit: \"m/s\"\r\n        },\r\n        {\r\n            rowName: \"Height\",\r\n            value: canSatPosition.y.toFixed(1),\r\n            unit: \"m\"\r\n        },\r\n        {\r\n            rowName: \"Pressure\",\r\n            value: pressure.toFixed(1),\r\n            unit: \"hPa\"\r\n        },\r\n        {\r\n            rowName: \"Wind speed\",\r\n            value: windSpeed,\r\n            unit: \"m/s\"\r\n        },\r\n        {\r\n            rowName: \"Wind azimuth\",\r\n            value: windAzimuth,\r\n            unit: <> &#176; </>\r\n        },        \r\n        {\r\n            rowName: \"Time\",\r\n            value: time.toFixed(1),\r\n            unit: \"s\"\r\n        },\r\n    ]\r\n\r\n    return(\r\n        <div className=\"WatchData\">\r\n            {(canSatPosition.y !== 0) && (isPaused?\r\n                <button onClick={() => resumeSimulation()} >\r\n                    Resume\r\n                </button>\r\n                :\r\n                <button onClick={() => pauseSimulation()} >\r\n                    Pause\r\n                </button>   \r\n            )}\r\n\r\n            {(canSatPosition.y === 0 || isPaused) &&\r\n                <button>\r\n                    Save\r\n                </button>\r\n            }\r\n\r\n            <button onClick={handleCancel} >\r\n                Cancel\r\n            </button>\r\n            <br />\r\n            <Table data={data} />            \r\n        </div>\r\n    )\r\n}","import \"./Graph.scss\"\r\nimport React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport {XYPlot, XAxis, YAxis, HorizontalGridLines, LineSeries, LineSeriesPoint, VerticalGridLines} from 'react-vis'\r\nimport { context, FlightProperties } from '../App/App'\r\n\r\nenum Properties {\r\n    canSatPositionX = \"Position x\",\r\n    canSatPositionY = \"Position y\",\r\n    canSatPositionZ = \"Position z\",\r\n    velocityX = \"Velocity x\",\r\n    velocityY = \"Velocity y\",\r\n    velocityZ = \"Velocity z\",\r\n    pressure = \"Preassure\",\r\n    time = \"Time\"\r\n}\r\n\r\nconst pickProperties = (ch: FlightProperties, p: Properties): number => {\r\n    switch(p) {\r\n        case Properties.canSatPositionX:\r\n            return ch.canSatPosition.x\r\n        case Properties.canSatPositionY:\r\n            return ch.canSatPosition.y\r\n        case Properties.canSatPositionZ:\r\n            return ch.canSatPosition.z\r\n        case Properties.velocityX:\r\n            return ch.velocity.x\r\n        case Properties.velocityY:\r\n            return ch.velocity.y * -1\r\n        case Properties.velocityZ:\r\n            return ch.velocity.z\r\n        case Properties.pressure:\r\n            return ch.pressure\r\n        case Properties.time:\r\n            return ch.time\r\n        default:\r\n            return 0\r\n    }        \r\n}\r\n\r\ninterface SelectProps {\r\n    onChange: React.Dispatch<React.SetStateAction<Properties>>,\r\n    value: Properties\r\n}\r\n\r\nconst SelectProperty:React.FC<SelectProps> = ({onChange, value}) => (\r\n    <select onChange={e => onChange(e.target.value as Properties)} value={value}>\r\n    {\r\n        Object.keys(Properties).map(propName => {\r\n            const propVal: string = Properties[propName]\r\n            return <option value={propVal}> {propVal} </option>\r\n        })\r\n    }\r\n    </select>\r\n)\r\n\r\nexport default () => {\r\n    const {flightProperties} = useContext(context)\r\n    const [plotSize, setPlotSize] = useState({width: 0, height: 0})\r\n    const GraphDiv = useRef<HTMLDivElement>()\r\n\r\n    const resizeGraph = () => {\r\n        if(GraphDiv.current === undefined) return\r\n        const {width, height} = GraphDiv.current.getBoundingClientRect()\r\n        setPlotSize({width, height})\r\n    }\r\n    \r\n    useEffect(() => {\r\n        resizeGraph()\r\n        window.addEventListener(\"resize\", resizeGraph)\r\n        return () => window.removeEventListener(\"resize\", resizeGraph)\r\n    }, [])\r\n\r\n    const [axisXProperty, setAxisXProperty] = useState(Properties.time)\r\n    const [axisYProperty, setAxisYProperty] = useState(Properties.velocityY)\r\n\r\n    const data: LineSeriesPoint[] = flightProperties.map((chunk) => {\r\n        return {\r\n            x: pickProperties(chunk, axisXProperty),\r\n            y: pickProperties(chunk, axisYProperty),\r\n        }\r\n    })\r\n\r\n    const {width, height} = plotSize\r\n    return(\r\n        <div className=\"Graph\" ref={GraphDiv}>\r\n            <XYPlot width={width} height={height} stroke=\"#fab132\" >\r\n                <HorizontalGridLines />\r\n                <VerticalGridLines />\r\n                <LineSeries data={data} />\r\n                <XAxis />\r\n                <YAxis />\r\n            </XYPlot>\r\n            Axis x:\r\n            <SelectProperty value={axisXProperty} onChange={setAxisXProperty} />\r\n            <br />\r\n            Axis y:            \r\n            <SelectProperty value={axisYProperty} onChange={setAxisYProperty} />\r\n        </div>\r\n    )\r\n}","import React, { createContext, useEffect, useReducer, useState } from 'react'\nimport \"./App.scss\"\nimport UnityVisualiser from '../UnityVisualizer/UnityVisualiser'\nimport { getPosition, Vector } from '../usefullStuff'\nimport MainComponent from '../MainComponent/MainComponent'\nimport Graph from '../Graph/Graph'\n\n\ninterface ContextType {\n  isPaused: boolean,\n  setIsPaused: React.Dispatch<React.SetStateAction<boolean>>,\n  originalHeight: number,\n  setOriginalHeight: React.Dispatch<React.SetStateAction<number>>,\n  automaticLocalisation: boolean,\n  setAutomaticLocalisation: React.Dispatch<React.SetStateAction<boolean>>,\n  automaticWind: boolean,\n  setAutomaticWind: React.Dispatch<React.SetStateAction<boolean>>,\n  automaticPressure: boolean,\n  setAutomaticPressure: React.Dispatch<React.SetStateAction<boolean>>,\n  originalLongitude: number,\n  setOriginalLongitude: React.Dispatch<React.SetStateAction<number>>,\n  originalLatitude: number,\n  setOriginalLatitude: React.Dispatch<React.SetStateAction<number>>,\n  windSpeed: number,\n  setWindSpeed: React.Dispatch<React.SetStateAction<number>>,\n  windAzimuth: number,\n  setWindAzimuth: React.Dispatch<React.SetStateAction<number>>,\n  canSatMass: number,\n  setCanSatMass: React.Dispatch<React.SetStateAction<number>>,\n  airCS: number, \n  setAirCS: React.Dispatch<React.SetStateAction<number>>,\n  canSatSurfaceArea: number,\n  setCanSatSurfaceArea: React.Dispatch<React.SetStateAction<number>>,\n  flightProperties: FlightProperties[],\n  setFlightProperties: React.Dispatch<FlightProperties | ReducerActions>\n}\n\nexport interface FlightProperties {\n  canSatPosition: Vector\n  velocity: Vector,\n  pressure: number,\n  time: number\n}\n\nexport enum ReducerActions {\n  reset = \"RESET\"\n}\n\nexport const context = createContext<ContextType>(undefined)\n\nexport default () => {\n  const [originalHeight, setOriginalHeight] = useState(1000)  \n  const [isPaused, setIsPaused] = useState(false)\n  const [automaticLocalisation, setAutomaticLocalisation] = useState(true)\n  const [originalLongitude, setOriginalLongitude] = useState(0)\n  const [originalLatitude, setOriginalLatitude] = useState(0)\n  const [automaticWind, setAutomaticWind] = useState(true)\n  const [automaticPressure, setAutomaticPressure] = useState(true)  \n  const [windSpeed, setWindSpeed] = useState(0)\n  const [windAzimuth, setWindAzimuth] = useState(0)  \n  const [canSatMass, setCanSatMass] = useState(0.3)\n  const [airCS, setAirCS] = useState(0.3)\n  const [canSatSurfaceArea, setCanSatSurfaceArea] = useState(0.00759)\n\n  const defaultFlightProperties = (): FlightProperties => ({\n    canSatPosition: {x: 0, y: originalHeight, z: 0},\n    velocity: {x: 0, y: 0, z: 0},\n    pressure: 0,\n    time: 0\n  })\n\n  const reducer = function<T>() {    \n    return (state: T[], action: T | ReducerActions) => {\n      if( action === ReducerActions.reset ) {\n        return [ defaultFlightProperties() ]        \n      }\n      return [...state, action]\n    }\n  }\n\n  const [flightProperties, setFlightProperties] = useReducer(reducer<FlightProperties>(), [ defaultFlightProperties() ])\n  useEffect(() => setFlightProperties(ReducerActions.reset), [originalHeight])\n\n\n  const contextValues: ContextType = {\n    isPaused,\n    setIsPaused,\n    originalHeight,\n    setOriginalHeight,\n    automaticLocalisation,\n    setAutomaticLocalisation,\n    automaticWind,\n    setAutomaticWind,\n    automaticPressure,\n    setAutomaticPressure,\n    originalLongitude,\n    setOriginalLongitude,\n    originalLatitude,\n    setOriginalLatitude,\n    windSpeed,\n    setWindSpeed,\n    windAzimuth,\n    setWindAzimuth,\n    canSatMass,\n    setCanSatMass,\n    airCS, \n    setAirCS,\n    canSatSurfaceArea,\n    setCanSatSurfaceArea,\n    flightProperties,\n    setFlightProperties\n  }\n  const anyWindow = window as any\n  anyWindow.contextValues = contextValues  \n  \n  return (\n    <div className=\"App\">      \n      <context.Provider value={contextValues}>              \n        <UnityVisualiser />\n        <Graph />\n        <MainComponent />                \n      </context.Provider>      \n    </div>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App/App'\n\ndeclare global {\n  interface Window {\n    startSimulation: () => Promise<void> \n    pauseSimulation: () => Promise<void>\n    resumeSimulation: () => Promise<void>\n  }\n\n  export interface Array<T> {\n    last(): T\n  }\n}\n\nArray.prototype.last = function() {\n  return this[this.length - 1]\n}\n\nReactDOM.render(\n  <React.StrictMode> <App /> </React.StrictMode>,\n  document.getElementById('root')\n)\n\nexport const {startSimulation, pauseSimulation, resumeSimulation} = window;\n"],"sourceRoot":""}